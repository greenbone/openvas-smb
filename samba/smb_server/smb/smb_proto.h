#ifndef __SMB_SERVER_SMB_SMB_PROTO_H__
#define __SMB_SERVER_SMB_SMB_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

#ifndef _PUBLIC_
#define _PUBLIC_
#endif


/* The following definitions come from smb_server/smb/receive.c  */

NTSTATUS smbsrv_send_oplock_break(void *p, struct ntvfs_handle *ntvfs, uint8_t level);
NTSTATUS smbsrv_recv_smb_request(void *private, DATA_BLOB blob);
void smbsrv_chain_reply(struct smbsrv_request *req);
NTSTATUS smbsrv_init_smb_connection(struct smbsrv_connection *smb_conn);

/* The following definitions come from smb_server/smb/negprot.c  */

void smbsrv_reply_negprot(struct smbsrv_request *req);

/* The following definitions come from smb_server/smb/nttrans.c  */

void smbsrv_reply_nttrans(struct smbsrv_request *req);
void smbsrv_reply_nttranss(struct smbsrv_request *req);

/* The following definitions come from smb_server/smb/reply.c  */

void smbsrv_reply_tcon(struct smbsrv_request *req);
void smbsrv_reply_tcon_and_X(struct smbsrv_request *req);
void smbsrv_reply_unknown(struct smbsrv_request *req);
void smbsrv_reply_ioctl(struct smbsrv_request *req);
void smbsrv_reply_chkpth(struct smbsrv_request *req);
void smbsrv_reply_getatr(struct smbsrv_request *req);
void smbsrv_reply_setatr(struct smbsrv_request *req);
void smbsrv_reply_dskattr(struct smbsrv_request *req);
void smbsrv_reply_open(struct smbsrv_request *req);
void smbsrv_reply_open_and_X(struct smbsrv_request *req);
void smbsrv_reply_mknew(struct smbsrv_request *req);
void smbsrv_reply_ctemp(struct smbsrv_request *req);
void smbsrv_reply_unlink(struct smbsrv_request *req);
void smbsrv_reply_readbraw(struct smbsrv_request *req);
void smbsrv_reply_lockread(struct smbsrv_request *req);
void smbsrv_reply_read(struct smbsrv_request *req);
void smbsrv_reply_read_and_X(struct smbsrv_request *req);
void smbsrv_reply_writebraw(struct smbsrv_request *req);
void smbsrv_reply_writeunlock(struct smbsrv_request *req);
void smbsrv_reply_write(struct smbsrv_request *req);
void smbsrv_reply_write_and_X(struct smbsrv_request *req);
void smbsrv_reply_lseek(struct smbsrv_request *req);
void smbsrv_reply_flush(struct smbsrv_request *req);
void smbsrv_reply_close(struct smbsrv_request *req);
void smbsrv_reply_writeclose(struct smbsrv_request *req);
void smbsrv_reply_lock(struct smbsrv_request *req);
void smbsrv_reply_unlock(struct smbsrv_request *req);
void smbsrv_reply_tdis(struct smbsrv_request *req);
void smbsrv_reply_echo(struct smbsrv_request *req);
void smbsrv_reply_printopen(struct smbsrv_request *req);
void smbsrv_reply_printclose(struct smbsrv_request *req);
void smbsrv_reply_printqueue(struct smbsrv_request *req);
void smbsrv_reply_printwrite(struct smbsrv_request *req);
void smbsrv_reply_mkdir(struct smbsrv_request *req);
void smbsrv_reply_rmdir(struct smbsrv_request *req);
void smbsrv_reply_mv(struct smbsrv_request *req);
void smbsrv_reply_ntrename(struct smbsrv_request *req);
void smbsrv_reply_copy(struct smbsrv_request *req);
void smbsrv_reply_lockingX(struct smbsrv_request *req);
void smbsrv_reply_readbmpx(struct smbsrv_request *req);
void smbsrv_reply_setattrE(struct smbsrv_request *req);
void smbsrv_reply_writebmpx(struct smbsrv_request *req);
void smbsrv_reply_writebs(struct smbsrv_request *req);
void smbsrv_reply_getattrE(struct smbsrv_request *req);
void smbsrv_reply_sesssetup_send(struct smbsrv_request *req,
				 union smb_sesssetup *io,
				 NTSTATUS status);
void smbsrv_reply_sesssetup(struct smbsrv_request *req);
void smbsrv_reply_exit(struct smbsrv_request *req);
void smbsrv_reply_ulogoffX(struct smbsrv_request *req);
void smbsrv_reply_findclose(struct smbsrv_request *req);
void smbsrv_reply_findnclose(struct smbsrv_request *req);
void smbsrv_reply_ntcreate_and_X(struct smbsrv_request *req);
void smbsrv_reply_ntcancel(struct smbsrv_request *req);
void smbsrv_reply_special(struct smbsrv_request *req);

/* The following definitions come from smb_server/smb/request.c  */

struct smbsrv_request *smbsrv_init_request(struct smbsrv_connection *smb_conn);
void smbsrv_setup_reply(struct smbsrv_request *req, uint_t wct, size_t buflen);
struct smbsrv_request *smbsrv_setup_secondary_request(struct smbsrv_request *old_req);
int req_max_data(struct smbsrv_request *req);
void req_grow_data(struct smbsrv_request *req, size_t new_size);
void smbsrv_send_reply_nosign(struct smbsrv_request *req);
void smbsrv_send_reply(struct smbsrv_request *req);
void smbsrv_setup_error(struct smbsrv_request *req, NTSTATUS status);
void smbsrv_send_error(struct smbsrv_request *req, NTSTATUS status);
size_t req_push_str(struct smbsrv_request *req, uint8_t *dest, const char *str, int dest_len, size_t flags);
size_t req_append_bytes(struct smbsrv_request *req, 
			const uint8_t *bytes, size_t byte_len);
size_t req_append_var_block(struct smbsrv_request *req, 
		const uint8_t *bytes, uint16_t byte_len);
size_t req_pull_string(struct smbsrv_request *req, const char **dest, const uint8_t *src, int byte_len, uint_t flags);
size_t req_pull_ascii4(struct smbsrv_request *req, const char **dest, const uint8_t *src, uint_t flags);
BOOL req_pull_blob(struct smbsrv_request *req, const uint8_t *src, int len, DATA_BLOB *blob);
BOOL req_data_oob(struct smbsrv_request *req, const uint8_t *ptr, uint32_t count);
struct ntvfs_handle *smbsrv_pull_fnum(struct smbsrv_request *req, const uint8_t *base, uint_t offset);
void smbsrv_push_fnum(uint8_t *base, uint_t offset, struct ntvfs_handle *ntvfs);
NTSTATUS smbsrv_handle_create_new(void *private_data, struct ntvfs_request *ntvfs, struct ntvfs_handle **_h);
NTSTATUS smbsrv_handle_make_valid(void *private_data, struct ntvfs_handle *h);
void smbsrv_handle_destroy(void *private_data, struct ntvfs_handle *h);
struct ntvfs_handle *smbsrv_handle_search_by_wire_key(void *private_data, struct ntvfs_request *ntvfs, const DATA_BLOB *key);
DATA_BLOB smbsrv_handle_get_wire_key(void *private_data, struct ntvfs_handle *handle, TALLOC_CTX *mem_ctx);

/* The following definitions come from smb_server/smb/search.c  */

void smbsrv_reply_search(struct smbsrv_request *req);
void smbsrv_reply_fclose(struct smbsrv_request *req);

/* The following definitions come from smb_server/smb/service.c  */

NTSTATUS smbsrv_tcon_backend(struct smbsrv_request *req, union smb_tcon *con);

/* The following definitions come from smb_server/smb/sesssetup.c  */

void smbsrv_sesssetup_backend(struct smbsrv_request *req,
			      union smb_sesssetup *sess);

/* The following definitions come from smb_server/smb/srvtime.c  */

void srv_push_dos_date(struct smbsrv_connection *smb_server,
		      uint8_t *buf, int offset, time_t unixdate);
void srv_push_dos_date2(struct smbsrv_connection *smb_server,
		       uint8_t *buf, int offset, time_t unixdate);
void srv_push_dos_date3(struct smbsrv_connection *smb_server,
		       uint8_t *buf, int offset, time_t unixdate);
time_t srv_pull_dos_date(struct smbsrv_connection *smb_server, 
			 const uint8_t *date_ptr);
time_t srv_pull_dos_date2(struct smbsrv_connection *smb_server, 
			  const uint8_t *date_ptr);
time_t srv_pull_dos_date3(struct smbsrv_connection *smb_server,
			  const uint8_t *date_ptr);

/* The following definitions come from smb_server/smb/trans2.c  */

void smbsrv_reply_trans2(struct smbsrv_request *req);
void smbsrv_reply_trans(struct smbsrv_request *req);
void smbsrv_reply_transs(struct smbsrv_request *req);
void smbsrv_reply_transs2(struct smbsrv_request *req);

/* The following definitions come from smb_server/smb/signing.c  */

void smbsrv_sign_packet(struct smbsrv_request *req);
BOOL smbsrv_setup_signing(struct smbsrv_connection *smb_conn,
			  DATA_BLOB *session_key,
			  DATA_BLOB *response);
void smbsrv_signing_restart(struct smbsrv_connection *smb_conn,
			    DATA_BLOB *session_key,
			    DATA_BLOB *response) ;
BOOL smbsrv_init_signing(struct smbsrv_connection *smb_conn);
void smbsrv_signing_no_reply(struct smbsrv_request *req);
BOOL smbsrv_signing_check_incoming(struct smbsrv_request *req);
#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __SMB_SERVER_SMB_SMB_PROTO_H__ */

