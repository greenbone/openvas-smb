#ifndef __LIBCLI_LDAP_LDAP_PROTO_H__
#define __LIBCLI_LDAP_LDAP_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

#ifndef _PUBLIC_
#define _PUBLIC_
#endif


/* The following definitions come from libcli/ldap/ldap.c  */

BOOL ldap_encode(struct ldap_message *msg, DATA_BLOB *result, TALLOC_CTX *mem_ctx);
BOOL ldap_decode(struct asn1_data *data, struct ldap_message *msg);
NTSTATUS ldap_full_packet(void *private_data, DATA_BLOB blob, size_t *packet_size);

/* The following definitions come from libcli/ldap/ldap_client.c  */

struct ldap_connection *ldap4_new_connection(TALLOC_CTX *mem_ctx, 
					    struct event_context *ev);
void ldap_read_io_handler(void *private_data, uint16_t flags) ;
struct composite_context *ldap_connect_send(struct ldap_connection *conn,
					    const char *url);
_PUBLIC_ NTSTATUS ldap_connect_recv(struct composite_context *ctx);
NTSTATUS ldap_connect(struct ldap_connection *conn, const char *url);
void ldap_set_reconn_params(struct ldap_connection *conn, int max_retries);
struct ldap_request *ldap_request_send(struct ldap_connection *conn,
				       struct ldap_message *msg);
NTSTATUS ldap_request_wait(struct ldap_request *req);
NTSTATUS ldap_check_response(struct ldap_connection *conn, struct ldap_Result *r);
const char *ldap_errstr(struct ldap_connection *conn, NTSTATUS status);
NTSTATUS ldap_result_n(struct ldap_request *req, int n, struct ldap_message **msg);
NTSTATUS ldap_result_one(struct ldap_request *req, struct ldap_message **msg, int type);
NTSTATUS ldap_transaction(struct ldap_connection *conn, struct ldap_message *msg);

/* The following definitions come from libcli/ldap/ldap_bind.c  */

NTSTATUS ldap_rebind(struct ldap_connection *conn);
NTSTATUS ldap_bind_simple(struct ldap_connection *conn, 
			  const char *userdn, const char *password);
NTSTATUS ldap_bind_sasl(struct ldap_connection *conn, struct cli_credentials *creds);

/* The following definitions come from libcli/ldap/ldap_msg.c  */

struct ldap_message *new_ldap_message(TALLOC_CTX *mem_ctx);
BOOL add_value_to_attrib(TALLOC_CTX *mem_ctx, struct ldb_val *value,
			 struct ldb_message_element *attrib);
BOOL add_attrib_to_array_talloc(TALLOC_CTX *mem_ctx,
				       const struct ldb_message_element *attrib,
				       struct ldb_message_element **attribs,
				       int *num_attribs);
BOOL add_mod_to_array_talloc(TALLOC_CTX *mem_ctx,
				    struct ldap_mod *mod,
				    struct ldap_mod **mods,
				    int *num_mods);

/* The following definitions come from libcli/ldap/ldap_ndr.c  */

char *ldap_encode_ndr_uint32(TALLOC_CTX *mem_ctx, uint32_t value);
char *ldap_encode_ndr_dom_sid(TALLOC_CTX *mem_ctx, const struct dom_sid *sid);
char *ldap_encode_ndr_GUID(TALLOC_CTX *mem_ctx, struct GUID *guid);
NTSTATUS ldap_decode_ndr_GUID(TALLOC_CTX *mem_ctx, struct ldb_val val, struct GUID *guid);

/* The following definitions come from libcli/ldap/ldap_ildap.c  */

NTSTATUS ildap_delete(struct ldap_connection *conn, const char *dn);
NTSTATUS ildap_add(struct ldap_connection *conn, const char *dn, struct ldap_mod **mods);
NTSTATUS ildap_modify(struct ldap_connection *conn, const char *dn, struct ldap_mod **mods);
NTSTATUS ildap_rename(struct ldap_connection *conn, const char *dn, const char *newrdn, 
		      const char *parentdn, BOOL deleteolddn);
int ildap_count_entries(struct ldap_connection *conn, struct ldap_message **res);
NTSTATUS ildap_search_bytree(struct ldap_connection *conn, const char *basedn, 
			     int scope, struct ldb_parse_tree *tree,
			     const char * const *attrs, BOOL attributesonly, 
			     struct ldb_control **control_req,
			     struct ldb_control ***control_res,
			     struct ldap_message ***results);
NTSTATUS ildap_search(struct ldap_connection *conn, const char *basedn, 
		      int scope, const char *expression, 
		      const char * const *attrs, BOOL attributesonly, 
		      struct ldb_control **control_req,
		      struct ldb_control ***control_res,
		      struct ldap_message ***results);

/* The following definitions come from libcli/ldap/ldap_controls.c  */

BOOL ldap_decode_control(void *mem_ctx, struct asn1_data *data, struct ldb_control *ctrl);
BOOL ldap_encode_control(void *mem_ctx, struct asn1_data *data, struct ldb_control *ctrl);
#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __LIBCLI_LDAP_LDAP_PROTO_H__ */

