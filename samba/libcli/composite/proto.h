#ifndef __LIBCLI_COMPOSITE_PROTO_H__
#define __LIBCLI_COMPOSITE_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

#ifndef _PUBLIC_
#define _PUBLIC_
#endif


/* The following definitions come from libcli/composite/composite.c  */

_PUBLIC_ struct composite_context *composite_create(TALLOC_CTX *mem_ctx,
						    struct event_context *ev);
_PUBLIC_ NTSTATUS composite_wait(struct composite_context *c);
_PUBLIC_ BOOL composite_is_ok(struct composite_context *ctx);
_PUBLIC_ void composite_error(struct composite_context *ctx, NTSTATUS status);
_PUBLIC_ BOOL composite_nomem(const void *p, struct composite_context *ctx);
_PUBLIC_ void composite_done(struct composite_context *ctx);
_PUBLIC_ void composite_continue(struct composite_context *ctx,
				 struct composite_context *new_ctx,
				 void (*continuation)(struct composite_context *),
				 void *private_data);
_PUBLIC_ void composite_continue_rpc(struct composite_context *ctx,
				     struct rpc_request *new_req,
				     void (*continuation)(struct rpc_request *),
				     void *private_data);
_PUBLIC_ void composite_continue_irpc(struct composite_context *ctx,
				      struct irpc_request *new_req,
				      void (*continuation)(struct irpc_request *),
				      void *private_data);
_PUBLIC_ void composite_continue_smb(struct composite_context *ctx,
				     struct smbcli_request *new_req,
				     void (*continuation)(struct smbcli_request *),
				     void *private_data);
_PUBLIC_ void composite_continue_smb2(struct composite_context *ctx,
				      struct smb2_request *new_req,
				      void (*continuation)(struct smb2_request *),
				      void *private_data);
_PUBLIC_ void composite_continue_nbt(struct composite_context *ctx,
				     struct nbt_name_request *new_req,
				     void (*continuation)(struct nbt_name_request *),
				     void *private_data);
#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __LIBCLI_COMPOSITE_PROTO_H__ */

