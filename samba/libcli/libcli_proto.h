#ifndef __LIBCLI_LIBCLI_PROTO_H__
#define __LIBCLI_LIBCLI_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

#ifndef _PUBLIC_
#define _PUBLIC_
#endif


/* The following definitions come from libcli/clireadwrite.c  */

ssize_t smbcli_read(struct smbcli_tree *tree, int fnum, void *_buf, off_t offset, 
		 size_t size);
ssize_t smbcli_write(struct smbcli_tree *tree,
		     int fnum, uint16_t write_mode,
		     const void *_buf, off_t offset, size_t size);
ssize_t smbcli_smbwrite(struct smbcli_tree *tree,
		     int fnum, const void *_buf, off_t offset, size_t size1);

/* The following definitions come from libcli/cliconnect.c  */

BOOL smbcli_socket_connect(struct smbcli_state *cli, const char *server);
BOOL smbcli_transport_establish(struct smbcli_state *cli, 
				struct nbt_name *calling,
				struct nbt_name *called);
NTSTATUS smbcli_negprot(struct smbcli_state *cli);
NTSTATUS smbcli_session_setup(struct smbcli_state *cli, 
			      struct cli_credentials *credentials);
NTSTATUS smbcli_tconX(struct smbcli_state *cli, const char *sharename, 
		      const char *devtype, const char *password);
NTSTATUS smbcli_full_connection(TALLOC_CTX *parent_ctx,
				struct smbcli_state **ret_cli, 
				const char *host,
				const char *sharename,
				const char *devtype,
				struct cli_credentials *credentials,
				struct event_context *ev);
NTSTATUS smbcli_tdis(struct smbcli_state *cli);
struct smbcli_state *smbcli_state_init(TALLOC_CTX *mem_ctx);
BOOL smbcli_parse_unc(const char *unc_name, TALLOC_CTX *mem_ctx,
		      char **hostname, char **sharename);

/* The following definitions come from libcli/clifile.c  */

uint32_t unix_perms_to_wire(mode_t perms);
NTSTATUS smbcli_unix_symlink(struct smbcli_tree *tree, const char *fname_src, 
			  const char *fname_dst);
NTSTATUS smbcli_unix_hardlink(struct smbcli_tree *tree, const char *fname_src, 
			   const char *fname_dst);
NTSTATUS smbcli_unix_chmod(struct smbcli_tree *tree, const char *fname, mode_t mode);
NTSTATUS smbcli_unix_chown(struct smbcli_tree *tree, const char *fname, uid_t uid, 
			gid_t gid);
NTSTATUS smbcli_rename(struct smbcli_tree *tree, const char *fname_src, 
		    const char *fname_dst);
NTSTATUS smbcli_unlink(struct smbcli_tree *tree, const char *fname);
NTSTATUS smbcli_mkdir(struct smbcli_tree *tree, const char *dname);
NTSTATUS smbcli_rmdir(struct smbcli_tree *tree, const char *dname);
NTSTATUS smbcli_nt_delete_on_close(struct smbcli_tree *tree, int fnum, BOOL flag);
int smbcli_nt_create_full(struct smbcli_tree *tree, const char *fname,
		       uint32_t CreatFlags, uint32_t DesiredAccess,
		       uint32_t FileAttributes, uint32_t ShareAccess,
		       uint32_t CreateDisposition, uint32_t CreateOptions,
		       uint8_t SecurityFlags);
int smbcli_open(struct smbcli_tree *tree, const char *fname, int flags, 
	     int share_mode);
NTSTATUS smbcli_close(struct smbcli_tree *tree, int fnum);
NTSTATUS smbcli_locktype(struct smbcli_tree *tree, int fnum, 
		      uint32_t offset, uint32_t len, int timeout, 
		      uint8_t locktype);
NTSTATUS smbcli_lock(struct smbcli_tree *tree, int fnum, 
		  uint32_t offset, uint32_t len, int timeout, 
		  enum brl_type lock_type);
NTSTATUS smbcli_unlock(struct smbcli_tree *tree, int fnum, uint32_t offset, uint32_t len);
NTSTATUS smbcli_lock64(struct smbcli_tree *tree, int fnum, 
		    off_t offset, off_t len, int timeout, 
		    enum brl_type lock_type);
NTSTATUS smbcli_unlock64(struct smbcli_tree *tree, int fnum, off_t offset, 
			 off_t len);
NTSTATUS smbcli_getattrE(struct smbcli_tree *tree, int fnum,
		      uint16_t *attr, size_t *size,
		      time_t *c_time, time_t *a_time, time_t *m_time);
NTSTATUS smbcli_getatr(struct smbcli_tree *tree, const char *fname, 
		    uint16_t *attr, size_t *size, time_t *t);
NTSTATUS smbcli_setatr(struct smbcli_tree *tree, const char *fname, uint16_t mode, 
		    time_t t);
NTSTATUS smbcli_fsetatr(struct smbcli_tree *tree, int fnum, uint16_t mode, 
			NTTIME create_time, NTTIME access_time, 
			NTTIME write_time, NTTIME change_time);
NTSTATUS smbcli_ftruncate(struct smbcli_tree *tree, int fnum, uint64_t size);
NTSTATUS smbcli_chkpath(struct smbcli_tree *tree, const char *path);
NTSTATUS smbcli_dskattr(struct smbcli_tree *tree, int *bsize, int *total, int *avail);
int smbcli_ctemp(struct smbcli_tree *tree, const char *path, char **tmp_path);

/* The following definitions come from libcli/clilist.c  */

int smbcli_list_new(struct smbcli_tree *tree, const char *Mask, uint16_t attribute, 
		    enum smb_search_data_level level,
		    void (*fn)(struct clilist_file_info *, const char *, void *), 
		    void *caller_state);
int smbcli_list_old(struct smbcli_tree *tree, const char *Mask, uint16_t attribute, 
		 void (*fn)(struct clilist_file_info *, const char *, void *), 
		 void *caller_state);
int smbcli_list(struct smbcli_tree *tree, const char *Mask,uint16_t attribute, 
		void (*fn)(struct clilist_file_info *, const char *, void *), void *state);

/* The following definitions come from libcli/clitrans2.c  */

NTSTATUS smbcli_qpathinfo(struct smbcli_tree *tree, const char *fname, 
		       time_t *c_time, time_t *a_time, time_t *m_time, 
		       size_t *size, uint16_t *mode);
NTSTATUS smbcli_qpathinfo2(struct smbcli_tree *tree, const char *fname, 
			time_t *c_time, time_t *a_time, time_t *m_time, 
			time_t *w_time, size_t *size, uint16_t *mode,
			ino_t *ino);
NTSTATUS smbcli_qfilename(struct smbcli_tree *tree, int fnum, const char **name);
NTSTATUS smbcli_qfileinfo(struct smbcli_tree *tree, int fnum, 
		       uint16_t *mode, size_t *size,
		       time_t *c_time, time_t *a_time, time_t *m_time, 
		       time_t *w_time, ino_t *ino);
NTSTATUS smbcli_qpathinfo_alt_name(struct smbcli_tree *tree, const char *fname, 
				const char **alt_name);

/* The following definitions come from libcli/climessage.c  */

BOOL smbcli_message_start(struct smbcli_tree *tree, const char *host, const char *username, 
		       int *grp);
BOOL smbcli_message_text(struct smbcli_tree *tree, char *msg, int len, int grp);
BOOL smbcli_message_end(struct smbcli_tree *tree, int grp);

/* The following definitions come from libcli/clideltree.c  */

int smbcli_deltree(struct smbcli_tree *tree, const char *dname);
#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __LIBCLI_LIBCLI_PROTO_H__ */

