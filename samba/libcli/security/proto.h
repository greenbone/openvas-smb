#ifndef __LIBCLI_SECURITY_PROTO_H__
#define __LIBCLI_SECURITY_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

#ifndef _PUBLIC_
#define _PUBLIC_
#endif


/* The following definitions come from libcli/security/security_token.c  */

struct security_token *security_token_initialise(TALLOC_CTX *mem_ctx);
void security_token_debug(int dbg_lev, const struct security_token *token);
BOOL security_token_is_sid(const struct security_token *token, const struct dom_sid *sid);
BOOL security_token_is_sid_string(const struct security_token *token, const char *sid_string);
BOOL security_token_is_system(const struct security_token *token) ;
BOOL security_token_is_anonymous(const struct security_token *token) ;
BOOL security_token_has_sid(const struct security_token *token, const struct dom_sid *sid);
BOOL security_token_has_sid_string(const struct security_token *token, const char *sid_string);
BOOL security_token_has_builtin_administrators(const struct security_token *token);
BOOL security_token_has_nt_authenticated_users(const struct security_token *token);

/* The following definitions come from libcli/security/security_descriptor.c  */

struct security_descriptor *security_descriptor_initialise(TALLOC_CTX *mem_ctx);
struct security_descriptor *security_descriptor_copy(TALLOC_CTX *mem_ctx, 
						     const struct security_descriptor *osd);
NTSTATUS security_descriptor_dacl_add(struct security_descriptor *sd, 
				      const struct security_ace *ace);
NTSTATUS security_descriptor_dacl_del(struct security_descriptor *sd, 
				      struct dom_sid *trustee);
BOOL security_ace_equal(const struct security_ace *ace1, 
			const struct security_ace *ace2);
BOOL security_acl_equal(const struct security_acl *acl1, 
			const struct security_acl *acl2);
BOOL security_descriptor_equal(const struct security_descriptor *sd1, 
			       const struct security_descriptor *sd2);
BOOL security_descriptor_mask_equal(const struct security_descriptor *sd1, 
				    const struct security_descriptor *sd2, 
				    uint32_t mask);
struct security_descriptor *security_descriptor_create(TALLOC_CTX *mem_ctx,
						       const char *owner_sid,
						       const char *group_sid,
						       ...);

/* The following definitions come from libcli/security/dom_sid.c  */

BOOL dom_sid_equal(const struct dom_sid *sid1, const struct dom_sid *sid2);
struct dom_sid *dom_sid_parse_talloc(TALLOC_CTX *mem_ctx, const char *sidstr);
struct dom_sid *dom_sid_dup(TALLOC_CTX *mem_ctx, const struct dom_sid *dom_sid);
struct dom_sid *dom_sid_add_rid(TALLOC_CTX *mem_ctx, 
				const struct dom_sid *domain_sid, 
				uint32_t rid);
NTSTATUS dom_sid_split_rid(TALLOC_CTX *mem_ctx, const struct dom_sid *sid,
			   struct dom_sid **domain, uint32_t *rid);
BOOL dom_sid_in_domain(const struct dom_sid *domain_sid, 
		       const struct dom_sid *sid);
char *dom_sid_string(TALLOC_CTX *mem_ctx, const struct dom_sid *sid);

/* The following definitions come from libcli/security/access_check.c  */

NTSTATUS sec_access_check(const struct security_descriptor *sd, 
			  const struct security_token *token,
			  uint32_t access_desired,
			  uint32_t *access_granted);

/* The following definitions come from libcli/security/privilege.c  */

const char *sec_privilege_name(enum sec_privilege privilege);
const char *sec_privilege_display_name(enum sec_privilege privilege, uint16_t *language);
enum sec_privilege sec_privilege_id(const char *name);
BOOL security_token_has_privilege(const struct security_token *token, enum sec_privilege privilege);
void security_token_set_privilege(struct security_token *token, enum sec_privilege privilege);
void security_token_debug_privileges(int dbg_lev, const struct security_token *token);

/* The following definitions come from libcli/security/sddl.c  */

struct security_descriptor *sddl_decode(TALLOC_CTX *mem_ctx, const char *sddl,
					const struct dom_sid *domain_sid);
char *sddl_encode(TALLOC_CTX *mem_ctx, const struct security_descriptor *sd,
		  const struct dom_sid *domain_sid);
#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __LIBCLI_SECURITY_PROTO_H__ */

