#ifndef __AUTH_AUTH_PROTO_H__
#define __AUTH_AUTH_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

#ifndef _PUBLIC_
#define _PUBLIC_
#endif


/* The following definitions come from auth/auth.c  */

NTSTATUS auth_context_set_challenge(struct auth_context *auth_ctx, const uint8_t chal[8], const char *set_by) ;
BOOL auth_challenge_may_be_modified(struct auth_context *auth_ctx) ;
_PUBLIC_ NTSTATUS auth_get_challenge(struct auth_context *auth_ctx, const uint8_t **_chal);
NTSTATUS auth_check_password(struct auth_context *auth_ctx,
			     TALLOC_CTX *mem_ctx,
			     const struct auth_usersupplied_info *user_info, 
			     struct auth_serversupplied_info **server_info);
void auth_check_password_send(struct auth_context *auth_ctx,
			      const struct auth_usersupplied_info *user_info,
			      void (*callback)(struct auth_check_password_request *req, void *private_data),
			      void *private_data);
NTSTATUS auth_check_password_recv(struct auth_check_password_request *req,
				  TALLOC_CTX *mem_ctx,
				  struct auth_serversupplied_info **server_info);
NTSTATUS auth_context_create(TALLOC_CTX *mem_ctx, const char **methods, 
			     struct event_context *ev,
			     struct messaging_context *msg,
			     struct auth_context **auth_ctx);
NTSTATUS auth_register(const void *_ops);
const struct auth_operations *auth_backend_byname(const char *name);
const struct auth_critical_sizes *auth_interface_version(void);
NTSTATUS auth_init(void);
NTSTATUS server_service_auth_init(void);

/* The following definitions come from auth/auth_util.c  */

NTSTATUS auth_get_challenge_not_implemented(struct auth_method_context *ctx, TALLOC_CTX *mem_ctx, DATA_BLOB *challenge);
NTSTATUS map_user_info(TALLOC_CTX *mem_ctx,
		       const struct auth_usersupplied_info *user_info,
		       struct auth_usersupplied_info **user_info_mapped);
NTSTATUS make_server_info_netlogon_validation(TALLOC_CTX *mem_ctx,
					      const char *account_name,
					      uint16_t validation_level,
					      union netr_Validation *validation,
					      struct auth_serversupplied_info **_server_info);
NTSTATUS auth_anonymous_server_info(TALLOC_CTX *mem_ctx, struct auth_serversupplied_info **_server_info) ;
NTSTATUS auth_system_server_info(TALLOC_CTX *mem_ctx, struct auth_serversupplied_info **_server_info) ;
NTSTATUS auth_generate_session_info(TALLOC_CTX *mem_ctx, 
				    struct auth_serversupplied_info *server_info, 
				    struct auth_session_info **_session_info) ;
NTSTATUS auth_anonymous_session_info(TALLOC_CTX *parent_ctx, 
				     struct auth_session_info **_session_info) ;
struct auth_session_info *anonymous_session(TALLOC_CTX *mem_ctx) ;
NTSTATUS auth_system_session_info(TALLOC_CTX *parent_ctx, 
				  struct auth_session_info **_session_info) ;
_PUBLIC_ struct auth_session_info *system_session(TALLOC_CTX *mem_ctx) ;
void auth_session_info_debug(int dbg_lev, 
			     const struct auth_session_info *session_info);
NTSTATUS auth_nt_status_squash(NTSTATUS nt_status);

/* The following definitions come from auth/auth_simple.c  */

_PUBLIC_ NTSTATUS authenticate_username_pw(TALLOC_CTX *mem_ctx,
					   struct event_context *ev,
					   struct messaging_context *msg,
					   const char *nt4_domain,
					   const char *nt4_username,
					   const char *password,
					   struct auth_session_info **session_info) ;
#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __AUTH_AUTH_PROTO_H__ */

