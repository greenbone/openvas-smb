#ifndef __LIB_CHARSET_CHARSET_PROTO_H__
#define __LIB_CHARSET_CHARSET_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

#ifndef _PUBLIC_
#define _PUBLIC_
#endif


/* The following definitions come from lib/charset/iconv.c  */

NTSTATUS charset_register_backend(const void *_funcs) ;
size_t smb_iconv(smb_iconv_t cd, 
		 const char **inbuf, size_t *inbytesleft,
		 char **outbuf, size_t *outbytesleft);
smb_iconv_t smb_iconv_open(const char *tocode, const char *fromcode);
int smb_iconv_close(smb_iconv_t cd);

/* The following definitions come from lib/charset/charcnv.c  */

_PUBLIC_ void init_iconv(void);
_PUBLIC_ ssize_t convert_string(charset_t from, charset_t to,
		      void const *src, size_t srclen, 
		      void *dest, size_t destlen);
_PUBLIC_ ssize_t convert_string_talloc(TALLOC_CTX *ctx, charset_t from, charset_t to,
			      void const *src, size_t srclen, void **dest);
_PUBLIC_ ssize_t push_ascii_talloc(TALLOC_CTX *ctx, char **dest, const char *src);
_PUBLIC_ ssize_t push_ucs2_talloc(TALLOC_CTX *ctx, void **dest, const char *src);
_PUBLIC_ ssize_t push_utf8_talloc(TALLOC_CTX *ctx, char **dest, const char *src);
_PUBLIC_ ssize_t pull_ascii_talloc(TALLOC_CTX *ctx, char **dest, const char *src);
_PUBLIC_ ssize_t pull_ucs2_talloc(TALLOC_CTX *ctx, char **dest, const void *src);
_PUBLIC_ ssize_t pull_utf8_talloc(TALLOC_CTX *ctx, char **dest, const char *src);
_PUBLIC_ ssize_t push_string(void *dest, const char *src, size_t dest_len, int flags);
_PUBLIC_ ssize_t pull_string(char *dest, const void *src, size_t dest_len, size_t src_len, int flags);
_PUBLIC_ codepoint_t next_codepoint(const char *str, size_t *size);
_PUBLIC_ ssize_t push_codepoint(char *str, codepoint_t c);

/* The following definitions come from lib/charset/util_unistr.c  */

codepoint_t toupper_w(codepoint_t val);
codepoint_t tolower_w(codepoint_t val);
int codepoint_cmpi(codepoint_t c1, codepoint_t c2);
_PUBLIC_ int strcasecmp_m(const char *s1, const char *s2);
_PUBLIC_ BOOL next_token(const char **ptr,char *buff, const char *sep, size_t bufsize);
_PUBLIC_ int strncasecmp_m(const char *s1, const char *s2, size_t n);
_PUBLIC_ BOOL strequal_w(const char *s1, const char *s2);
_PUBLIC_ BOOL strcsequal_w(const char *s1,const char *s2);
_PUBLIC_ void string_replace_w(char *s, char oldc, char newc);
_PUBLIC_ char *alpha_strcpy(char *dest, const char *src, const char *other_safe_chars, size_t maxlength);
_PUBLIC_ size_t strlen_m(const char *s);
_PUBLIC_ size_t strlen_m_term(const char *s);
_PUBLIC_ char *strchr_m(const char *s, char c);
_PUBLIC_ char *strrchr_m(const char *s, char c);
_PUBLIC_ BOOL strhaslower(const char *string);
_PUBLIC_ BOOL strhasupper(const char *string);
_PUBLIC_ char *strlower_talloc(TALLOC_CTX *ctx, const char *src);
_PUBLIC_ char *strupper_talloc(TALLOC_CTX *ctx, const char *src);
_PUBLIC_ void strlower_m(char *s);
_PUBLIC_ void strupper_m(char *s);
_PUBLIC_ size_t count_chars_w(const char *s, char c);
#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __LIB_CHARSET_CHARSET_PROTO_H__ */

